# Generated by Django 3.1.1 on 2020-11-06 00:11

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(default='', max_length=11, unique=True, verbose_name='手机号')),
                ('password', models.CharField(default='', max_length=32, verbose_name='明文密码')),
                ('md5_password', models.CharField(default='', max_length=32, verbose_name='加密密码')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='注册时间')),
            ],
            options={
                'verbose_name': ('普通用户',),
                'verbose_name_plural': '普通用户',
            },
        ),
        migrations.CreateModel(
            name='UsersData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('money', models.FloatField(default=0, verbose_name='余额')),
                ('name', models.CharField(default='', max_length=30, verbose_name='姓名')),
                ('number', models.CharField(default='', max_length=30, verbose_name='学号')),
                ('gender', models.IntegerField(choices=[(0, '女'), (1, '男')], default=1, verbose_name='性别')),
                ('college', models.CharField(default='天津师范大学', max_length=30, verbose_name='学院')),
                ('major', models.CharField(default='', max_length=30, verbose_name='专业')),
                ('grade', models.CharField(default='2020', max_length=30, verbose_name='年级')),
                ('head_img', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='头像')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('users', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.users', verbose_name='用户')),
            ],
            options={
                'verbose_name': ('用户资料',),
                'verbose_name_plural': '用户资料',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('modify_time', models.DateTimeField(auto_now=True, verbose_name='最后修改时间')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': ('管理员',),
                'verbose_name_plural': '管理员',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
